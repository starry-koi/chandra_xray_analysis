{
	
	"skip_obsid_astrom" 	: [], 				#Due to wcs_match throwing errors, if any 
								#specific obsid makes the program stop due 
								#to a segfault during the astrometry fixing 
								#phase (specifically when matching sources 
								#to catalog sources) just put the obsid in 
								#this list as a string or int and it should 
								#skip the step that's throwing errors.
	
	
	######## Energy-range related variables - may need to be changed between runs ##########

	"band_check" 		: "2-10",			#This determines what energy band the 
								#fluxes and luminosities are calculated in.
								#Options of (all in keV):
								#'0.5-2'
								#'0.5-7'
								#'0.5-8'
								#'2-10'

	"filter_check" 		: "0.5-7",			#Filters the adjusted and cleaned x-ray
								#image that we use to find the final sources
								#and get flux and luminosity and all that.
								#Options of (all in keV):
								#'0.5-2'
								#'0.5-7'
								#'2-7'


	######## Galaxy-specific variables - will need to be changed with each new galaxy #############
	"r50_all_gals" 		: [],				#Petrosian 50% light radius for each galaxy,
								#in arcsec. Ordered from lowest obsid to 
								#highest obsid.

	"galdist" 		: [],				#Distance to each galaxy (if known) in Mpc,
								#ordered from lowest obsid to highest obsid.

	"galdist_flag" 		: "True",			#Whether or not to use the galaxy distances
								#to compute luminosities. True to compute,
								#False to not.




	######## Other variables/parameters - these probably won't need much (if any) changing ###########
	"coord_frame" 		: "icrs",			#What coordinate frame to use when making the
								#galaxy region. I believe Chandra uses 'icrs',
								#which is the default for this. 'fk5' would 
								#likely make a fine choice as well, the
								#differences would be very, very small.

	"gal_exclude_rad" 	: 3,				#Multiplicative factor - this * r50 (the 
								#Petrosian 50% light radius) defines the 
								#galaxy region, used to separate out sources
								#of interest.

	"fluxim_astrom_psfecf" 	: 0.9,				#For the astrometry fluximage, make a psf with
								#an enclosed energy fraction of this much.
								#Using 0.9 helps to avoid finding faint
								#sources.

	"wavdet_astrom_scales" 	: "1.0 1.4 2.0 2.8 4.0",	#Scales to use for the astrometry wavdetect.
								#Pretty sure these are in pixels. For more 
								#info, can check the wavdetect ciao thread.

	"catalog_filter" 	: "$imag<22",			#How to filter the catalog sources retrieved
								#from SDSS. The format is like
								#'$column_name<value' (or >). Things like
								#imag or rmag (for column name) generally work
								#though you can check the actual column names
								#via the catalog tool in ds9.

	"astrom_match_radius" 	: 3,				#For astrometry, in arcseconds - we require 
								#the separation between a wavdetect and a 
								#catalog source to be less than this in order
								#to count as a match. (can also play around
								#with this a bit)

	"astrom_match_residlim" : 2,				#For astrometry, in arcseconds - this is the
								#maximum residual we can have (distance
								#between already matched sources) in order to
								#keep the sources as a good match.

	"astrom_match_method" 	: "trans",			#How to get the astrometrical corrections - 
								#options are 'rst' (for a full rotation,
								#scale factor, and translation) or 'trans'
								#(for just a translation). Since the
								#astrometry corrections seem to tend to be
								#very small (sub-pixel), keeping this as
								#'trans' works best.

	"min_matches" 		: 1,				#Minimum number of matches (between wavdetect
								#and catalog sources) required in order to 
								#correct the astrometry. Should be at least
								#1 (obviously).

	"bin_time_var" 		: 200,				#How to bin along the time axis when finding
								#background flares. 200 is what is used in
								#the ciao thread, and seems to work well.

	"fluximage_psfecf" 	: 0.393,			#For analysis - make a psf with this enclosed
								#energy fraction.

	"wavdet_analysis_scales": "1.0 1.4 2.0 2.8 4.0",	#Scales to use for analysis wavdetect. Units
								#are, again, pixels.

	"analysis_psfecf" 	: 0.9,				#For making the source regions (used to
								#measure flux), which are regions
								#corresponding to a psf with this enclosed
								#energy fraction, (cont. below)

	"analysis_energy" 	: 4.5,				#at this specific energy (in keV).

	"bg_radius_factor" 	: 12,				#Multiplicative factor - background regions
								#(for the source regions above) are annuli
								#with inner radius of the source region and
								#outer radius of this factor * the radius of
								#the source region. Should make pretty big
								#(10-12?) to get good coverage of the galaxy.

	"srcflux_PhoIndex"	: "1.8",			#For flux - we use a power law spectral model
								#with a photon index of this variable.

	"minflux_counts" 	: 2,				#Input 'source counts' used to calculate the
								#expected minimum detectable flux for each
								#galaxy.

	"minflux_bgcounts" 	: 0,				#Input 'background counts' used to calculate
								#the expected minimum detectable flux for
								#each galaxy.

	"ds9_reg_color" 	: "magenta",			#What color to make the output ds9 source and
								#corresponding positional error regions.

	"round_dec" 		: 2, 				#How many decimals to round to when printing
								#out data (applies to flux values in a
								#strange way - read on)

	"flux_ref" 		: "1e15",			#When printing out flux values, we print out
								#(original flux value)*(this value) and round
								#that to round_dec number of decimal places.

	"mult_hdrs" 		: "False"			#All sources (from all the galaxies) are 
								#combined into one file (with appropriate
								#galaxy and obsid noted) - this is whether
								#to reprint the column headers (counts, flux,
								#etc.) each time a new galaxy's worth of 
								#sources is added to the file.
}
